<!DOCTYPE html>
<html lang="en">
<head>
  	<meta charset="utf-8">
  	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  	<meta name="author" content="David Hu">

  	<title>d3test</title>
	<link rel="stylesheet" href="../css/bootstrap.css" />
	<link rel="stylesheet" href="../fortawesome/css/font-awesome.min.css" />
	<link href="../css/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" />
	<link href='http://fonts.googleapis.com/css?family=Open+Sans:400,600' rel='stylesheet' type='text/css'>
	<link href='http://fonts.googleapis.com/css?family=Ubuntu' rel='stylesheet' type='text/css'>
	<link href='http://fonts.googleapis.com/css?family=Grand+Hotel' rel='stylesheet' type='text/css'>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>
	<script type="text/javascript" src="../js/graph.js"></script>
	<!--[if lt IE 9]>
	<script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
</head>
<body>
	<div id="top">
		<h1>snapgraph</h1>
		<div id="searchStatus" class="icon-search" style="position:relative;left:30px;top:-3px;"></div>
		<input type="text" id="search" />
		<i class="icon-globe icon-2x" id="globe"></i>
	</div>
	<div id="main">
		<div id="tooltip" style="position:absolute;">octopi</div>
		<div id="chart"></div>
	</div>
	<div id="bottom"></div>
	<img src="../img/graphs.png" id="graphbg" />

	<script>

	$(document).ready(function() {
		// tooltip always follows mouse
		$('body').mousemove(function(e) {
			$('#tooltip').css({'top': e.clientY + 20, 'left': e.clientX});
		});

		$('#search').keypress(function(e) {
			if(e.which === 13) {
				$('#searchStatus').attr('class', '');
				$('#searchStatus').addClass('icon-repeat');
				$('#searchStatus').addClass('icon-spin');
				$('#chart').html('');
				$('#top').animate({
					marginTop: '2%'
				}, 400, function() { console.log('done'); });
				$('#chart').fadeIn(400, function() {
					function myGraph(el) {

					    // Add and remove elements on the graph object
					    this.addNode = function (id) {
					        nodes.push({"id":id, "attraction": 0});
					        update();
					    }

					    this.removeNode = function (id) {
					        var i = 0;
					        var n = findNode(id);
					        while (i < links.length) {
					            if ((links[i]['source'] == n)||(links[i]['target'] == n)) links.splice(i,1);
					            else i++;
					        }
					        nodes.splice(findNodeIndex(id),1);
					        update();
					    }

					    this.addLink = function (source, target, strength) {
					        links.push({"source":findNode(source),"target":findNode(target)});
					        findNode(target).attraction += strength;
					        update();
					    }

					    var findNode = function(id) {
					        for (var i in nodes) {if (nodes[i]["id"] === id) return nodes[i]};
					    }

					    var findNodeIndex = function(id) {
					        for (var i in nodes) {if (nodes[i]["id"] === id) return i};
					    }

					    // set up the D3 visualisation in the specified element
					    var w = $(el).innerWidth(),
					        h = $(el).innerHeight();

					    var vis = this.vis = d3.select(el).append("svg:svg")
					        .attr("width", w)
					        .attr("height", h);

					    var force = d3.layout.force()
					        .gravity(.05)
					        .distance(function(d) { 
					        	var dist = 150-d.source.attraction-d.target.attraction;
					        	return dist; })
					        .charge(-500)
					        .size([w, h]);

					    var nodes = force.nodes(),
					        links = force.links();

					    var update = function () {

					    	var link = vis.selectAll("line.link")
					            .data(links, function(d) { return d.source.id + "-" + d.target.id; });

					        link.enter().insert("line")
					            .attr("class", "link");

					        link.exit().remove();

					        var node = vis.selectAll("g.node")
					            .data(nodes, function(d) { return d.id;});

					        var nodeEnter = node.enter().append("g")
					            .attr("class", "node")
								.on("mouseover", mouseover)
								.on("mouseout", mouseout)
					            .call(force.drag);


					        node.append("circle")
								// .attr("cx", function(d) { return d.x + Math.random()*100; })
								// .attr("cy", function(d) { return d.y; })
								.attr("r", 30)
								.style("fill", "#930");

							node.append("svg:image")
								.attr('xlink:href', '../img/snapchat.jpg')
								.attr("width", 36)
								.attr("height", 36)
								.attr("x", -18)
								.attr("y", -18)
								.call(fetchTwitterImg);


					        node.exit().remove();

					        force.on("tick", function() {
					        	
								node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
					        	link.attr("x1", function(d) { return d.source.x; })
					        		.attr("y1", function(d) { return d.source.y; })
					        		.attr("x2", function(d) { return d.target.x; })
					        		.attr("y2", function(d) { return d.target.y; });
					        });

					        node.order();
					   //      force
								// .gravity(.05)
								// .distance(100)
								// .charge(function() { return Math.random()*-100})
								// .size([w, h]);
					        // Restart the force layout.
					        force.start();


					    }

					    function fetchTwitterImg(selection) {
						  	var users = selection[0];
						  	for(var i = 0; i < users.length; i++) {
						  		// if always runs, that means we got an image back so we the node's image 
						  		var currUser = users[i];
						  		if(currUser !== null) {
						  			var username = users[i].__data__.id;
						  			console.log('username is', username);	
						  			$.ajax({
					  			        url:'https://api.twitter.com/1/users/profile_image?screen_name='+username+'&size=bigger',
					  			        crossDomain: true,
					  			        dataType: 'jsonp'
					  			    }).always(function(eye, usrnm) { 
					  			    	return function(a, b) {
						  			        users[eye].href.baseVal = 'https://api.twitter.com/1/users/profile_image?screen_name='+usrnm+'&size=bigger';
						  			    }
						  			}(i, username));
						  		}
							}
						}

					    // Make it all go
					    update();
					}

					var graph = new myGraph("#chart");
					var user = $('#search').val();
					addToGraph(graph, user);

					function addToGraph(graph, name) {
						$.ajax({
							url: 'getuser?u=' + name
						}).done(function(result) {
							console.log('DONE', result);
							$('#searchStatus').attr('class', '');
							$('#searchStatus').addClass('icon-search');

							if(result.error) {
								$('#top').effect('shake', {times: 4, distance:5}, 200);
							}
							if(result.children.length === 0) {
								graph.addNode(name);						
							} else {
								for(var i = 0; i < result.children.length; i++) {
									var f = result.children[i].name;

									graph.addNode(name);
									graph.addNode(f);
									graph.addLink(name, f, result.children[i].score);

								}
							}
						});
					}
					
					$(document).on('click', 'g', function(e) {
						console.log('CLICKED', e, e.currentTarget.__data__.id);
						addToGraph(graph, e.currentTarget.__data__.id);
					});

					// show tooltip
					function mouseover(d) {
						console.log(d3.select(d));
						var svg = d3.select(d)[0][0];
						if(!svg.id) {
							$('#tooltip').html(svg._id);
						} else {
							$('#tooltip').html(svg.id);	
						}
						$('#tooltip').show(0);
					}

					// hide tooltip
					function mouseout(d) {
						$('#tooltip').hide(0);
					}
										
				});
				e.preventDefault();
			}
		});
	});
	</script>
</body>
</html>